{"ast":null,"code":"var _jsxFileName = \"/Users/ericawang/Downloads/MobileApp-F24/Week_5/Notes/todo-v2/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport TodoCreate from './components/TodoCreate';\nimport TodoList from './components/TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const createTodo = async title => {\n    const response = await axios.post('http://localhost:3001/todos', {\n      title\n    });\n    const updatedTodos = [...todos, response.data];\n    setTodos();\n\n    // const updatedTodos = [\n    //   ...todos,\n    //   {id: Math.round(Math.random() * 9999999), title},\n    // ]\n    // setTodos(updatedTodos)\n  };\n  const deleteTodoById = id => {\n    const updatedTodos = todos.filter(todo => {\n      // return truthy keeps, falsey removes!\n      return todo.id !== id;\n    });\n    setTodos(updatedTodos);\n  };\n\n  // LAST EDIT need the ID of the todo being edited AND the new title from the form!\n  const editTodoById = (id, newTitle) => {\n    const updatedTodos = todos.map(todo => {\n      // we only care about updating the one that matches the ID\n      if (todo.id === id) {\n        // we copy the old values, then overwrite the title\n        return {\n          ...todo,\n          title: newTitle\n        };\n      }\n      // otherwise return the unaltered todo\n      return todo;\n    });\n    // set our state, NOW WE NEED TO PASS IT ALL THE WAY DOWN\n    setTodos(updatedTodos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TodoCreate, {\n      onCreate: createTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      onDelete: deleteTodoById,\n      onEdit: editTodoById\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","axios","TodoCreate","TodoList","jsxDEV","_jsxDEV","App","_s","todos","setTodos","createTodo","title","response","post","updatedTodos","data","deleteTodoById","id","filter","todo","editTodoById","newTitle","map","children","onCreate","fileName","_jsxFileName","lineNumber","columnNumber","onDelete","onEdit","_c","$RefreshReg$"],"sources":["/Users/ericawang/Downloads/MobileApp-F24/Week_5/Notes/todo-v2/src/App.js"],"sourcesContent":["import {useState} from 'react'\nimport axios from 'axios'\nimport TodoCreate from './components/TodoCreate'\nimport TodoList from './components/TodoList'\n\nconst App = () => {\n\n  const [todos, setTodos] = useState([])\n\n\n  const createTodo = async (title) => {\n    const response = await axios.post('http://localhost:3001/todos', {title})\n    const updatedTodos = [\n      ...todos,\n      response.data\n    ]\n    setTodos()\n    \n    // const updatedTodos = [\n    //   ...todos,\n    //   {id: Math.round(Math.random() * 9999999), title},\n    // ]\n    // setTodos(updatedTodos)\n  }\n\n  const deleteTodoById = (id) => {\n\n\n    const updatedTodos = todos.filter((todo) => {\n      // return truthy keeps, falsey removes!\n      return todo.id !== id\n    })\n\n    setTodos(updatedTodos)\n  }\n\n  // LAST EDIT need the ID of the todo being edited AND the new title from the form!\n  const editTodoById = (id, newTitle) => {\n    const updatedTodos = todos.map((todo) => {\n      // we only care about updating the one that matches the ID\n      if (todo.id === id) {\n        // we copy the old values, then overwrite the title\n        return {...todo, title: newTitle}\n      }\n      // otherwise return the unaltered todo\n      return todo\n    })\n    // set our state, NOW WE NEED TO PASS IT ALL THE WAY DOWN\n    setTodos(updatedTodos)\n  }\n  return (\n    <div>\n      <TodoCreate onCreate={createTodo} />\n      {/* Now that we have state, pass it to the list to map! */}\n      {/* DELETE function added, pass it down */}\n      <TodoList todos={todos} onDelete={deleteTodoById} onEdit={editTodoById} />\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,QAAQ,MAAM,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAGtC,MAAMU,UAAU,GAAG,MAAOC,KAAK,IAAK;IAClC,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,6BAA6B,EAAE;MAACF;IAAK,CAAC,CAAC;IACzE,MAAMG,YAAY,GAAG,CACnB,GAAGN,KAAK,EACRI,QAAQ,CAACG,IAAI,CACd;IACDN,QAAQ,CAAC,CAAC;;IAEV;IACA;IACA;IACA;IACA;EACF,CAAC;EAED,MAAMO,cAAc,GAAIC,EAAE,IAAK;IAG7B,MAAMH,YAAY,GAAGN,KAAK,CAACU,MAAM,CAAEC,IAAI,IAAK;MAC1C;MACA,OAAOA,IAAI,CAACF,EAAE,KAAKA,EAAE;IACvB,CAAC,CAAC;IAEFR,QAAQ,CAACK,YAAY,CAAC;EACxB,CAAC;;EAED;EACA,MAAMM,YAAY,GAAGA,CAACH,EAAE,EAAEI,QAAQ,KAAK;IACrC,MAAMP,YAAY,GAAGN,KAAK,CAACc,GAAG,CAAEH,IAAI,IAAK;MACvC;MACA,IAAIA,IAAI,CAACF,EAAE,KAAKA,EAAE,EAAE;QAClB;QACA,OAAO;UAAC,GAAGE,IAAI;UAAER,KAAK,EAAEU;QAAQ,CAAC;MACnC;MACA;MACA,OAAOF,IAAI;IACb,CAAC,CAAC;IACF;IACAV,QAAQ,CAACK,YAAY,CAAC;EACxB,CAAC;EACD,oBACET,OAAA;IAAAkB,QAAA,gBACElB,OAAA,CAACH,UAAU;MAACsB,QAAQ,EAAEd;IAAW;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGpCvB,OAAA,CAACF,QAAQ;MAACK,KAAK,EAAEA,KAAM;MAACqB,QAAQ,EAAEb,cAAe;MAACc,MAAM,EAAEV;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEV,CAAC;AAAArB,EAAA,CArDKD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAuDT,eAAeA,GAAG;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}