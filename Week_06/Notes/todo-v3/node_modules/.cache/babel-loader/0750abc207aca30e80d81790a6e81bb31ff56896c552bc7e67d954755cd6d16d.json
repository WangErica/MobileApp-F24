{"ast":null,"code":"var _jsxFileName = \"/Users/ericawang/Downloads/MobileApp-F24/Week_6/Notes/todo-v3/src/context/Todos.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoContext = /*#__PURE__*/createContext();\nfunction Provider({\n  children\n}) {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const fetchTodos = useCallback(async () => {\n    const response = await axios.get('http://localhost:3001/todos');\n    setTodos(response.data);\n  }, []);\n\n  // const stableFetchTodos = useCallback(fetchTodos,[])\n\n  const createTodo = async title => {\n    const response = await axios.post('http://localhost:3001/todos', {\n      title\n    });\n    // always make a copy and add the new at the end\n    const updatedTodos = [...todos, response.data];\n    // always set with the copy so react knows to compare 2 different slots in its memory\n    setTodos(updatedTodos);\n  };\n  const editTodoById = async (id, newTitle) => {\n    const response = await axios.put(`http://localhost:3001/todos/${id}`, {\n      title: newTitle\n    });\n    const updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          ...response.data\n        };\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n  const deleteTodoById = async id => {\n    await axios.delete(`http://localhost:3001/todos/${id}`);\n    const updatedTodos = todos.filter(todo => {\n      // return truthy keeps, falsey removes!\n      return todo.id !== id;\n    });\n    setTodos(updatedTodos);\n  };\n  const contextValues = {\n    todos,\n    fetchTodos,\n    createTodo,\n    editTodoById,\n    deleteTodoById\n  };\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: contextValues,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(Provider, \"Vx0C3OmJM4X7oCEOQl6ou6jgqfk=\");\n_c = Provider;\nexport { Provider };\nexport default TodoContext;\nvar _c;\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["createContext","useState","useCallback","axios","jsxDEV","_jsxDEV","TodoContext","Provider","children","_s","todos","setTodos","fetchTodos","response","get","data","createTodo","title","post","updatedTodos","editTodoById","id","newTitle","put","map","todo","deleteTodoById","delete","filter","contextValues","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ericawang/Downloads/MobileApp-F24/Week_6/Notes/todo-v3/src/context/Todos.js"],"sourcesContent":["import {createContext, useState, useCallback} from 'react'\nimport axios from 'axios'\nconst TodoContext = createContext()\n\nfunction Provider({children}){\n    const [todos, setTodos] = useState([])\n\n    const fetchTodos = useCallback( async () => {\n        const response = await axios.get('http://localhost:3001/todos')\n        setTodos(response.data)\n    }, [])\n\n    // const stableFetchTodos = useCallback(fetchTodos,[])\n\n    const createTodo = async (title) => {\n        const response = await axios.post('http://localhost:3001/todos', {title})\n        // always make a copy and add the new at the end\n        const updatedTodos = [...todos, response.data]\n        // always set with the copy so react knows to compare 2 different slots in its memory\n        setTodos(updatedTodos)\n    }\n    \n    const editTodoById = async (id, newTitle) => {\n        const response = await axios.put(`http://localhost:3001/todos/${id}`, {\n            title: newTitle,\n        })\n    \n        const updatedTodos = todos.map((todo) => {\n            if (todo.id === id) {\n                return {...todo, ...response.data}\n            }\n            return todo\n        })\n        setTodos(updatedTodos)\n    }\n    \n    const deleteTodoById = async (id) => {\n        await axios.delete(`http://localhost:3001/todos/${id}`)\n    \n        const updatedTodos = todos.filter((todo) => {\n            // return truthy keeps, falsey removes!\n            return todo.id !== id\n        })\n    \n        setTodos(updatedTodos)\n    }\n\n    const contextValues = {\n        todos,\n        fetchTodos,\n        createTodo,\n        editTodoById,\n        deleteTodoById\n    }\n\n    return(\n        <TodoContext.Provider value={contextValues}>{children}</TodoContext.Provider>\n    )\n}\n\nexport {Provider}\nexport default TodoContext\n"],"mappings":";;AAAA,SAAQA,aAAa,EAAEC,QAAQ,EAAEC,WAAW,QAAO,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACzB,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,SAASO,QAAQA,CAAC;EAACC;AAAQ,CAAC,EAAC;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMW,UAAU,GAAGV,WAAW,CAAE,YAAY;IACxC,MAAMW,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,6BAA6B,CAAC;IAC/DH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA,MAAMC,UAAU,GAAG,MAAOC,KAAK,IAAK;IAChC,MAAMJ,QAAQ,GAAG,MAAMV,KAAK,CAACe,IAAI,CAAC,6BAA6B,EAAE;MAACD;IAAK,CAAC,CAAC;IACzE;IACA,MAAME,YAAY,GAAG,CAAC,GAAGT,KAAK,EAAEG,QAAQ,CAACE,IAAI,CAAC;IAC9C;IACAJ,QAAQ,CAACQ,YAAY,CAAC;EAC1B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAOC,EAAE,EAAEC,QAAQ,KAAK;IACzC,MAAMT,QAAQ,GAAG,MAAMV,KAAK,CAACoB,GAAG,CAAC,+BAA+BF,EAAE,EAAE,EAAE;MAClEJ,KAAK,EAAEK;IACX,CAAC,CAAC;IAEF,MAAMH,YAAY,GAAGT,KAAK,CAACc,GAAG,CAAEC,IAAI,IAAK;MACrC,IAAIA,IAAI,CAACJ,EAAE,KAAKA,EAAE,EAAE;QAChB,OAAO;UAAC,GAAGI,IAAI;UAAE,GAAGZ,QAAQ,CAACE;QAAI,CAAC;MACtC;MACA,OAAOU,IAAI;IACf,CAAC,CAAC;IACFd,QAAQ,CAACQ,YAAY,CAAC;EAC1B,CAAC;EAED,MAAMO,cAAc,GAAG,MAAOL,EAAE,IAAK;IACjC,MAAMlB,KAAK,CAACwB,MAAM,CAAC,+BAA+BN,EAAE,EAAE,CAAC;IAEvD,MAAMF,YAAY,GAAGT,KAAK,CAACkB,MAAM,CAAEH,IAAI,IAAK;MACxC;MACA,OAAOA,IAAI,CAACJ,EAAE,KAAKA,EAAE;IACzB,CAAC,CAAC;IAEFV,QAAQ,CAACQ,YAAY,CAAC;EAC1B,CAAC;EAED,MAAMU,aAAa,GAAG;IAClBnB,KAAK;IACLE,UAAU;IACVI,UAAU;IACVI,YAAY;IACZM;EACJ,CAAC;EAED,oBACIrB,OAAA,CAACC,WAAW,CAACC,QAAQ;IAACuB,KAAK,EAAED,aAAc;IAAArB,QAAA,EAAEA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAErF;AAACzB,EAAA,CAtDQF,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAwDjB,SAAQA,QAAQ;AAChB,eAAeD,WAAW;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}